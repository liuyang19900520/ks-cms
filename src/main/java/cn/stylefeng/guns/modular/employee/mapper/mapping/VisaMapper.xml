<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.modular.employee.mapper.VisaMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.stylefeng.guns.modular.employee.entity.Visa">
        <id column="EMPLOYEE_ID" property="employeeId"/>
        <result column="EMPLOYEE_NAME_CN" property="employeeNameCn"/>
        <result column="USER_ID" property="userId"/>
        <result column="EMPLOYEE_SELECT_VALUE" property="employeeSelectValue"/>
        <result column="VISA_TYPE" property="visaType"/>
        <result column="CREATE_TIME" property="createTime"/>
        <result column="CREATE_USER" property="createUser"/>
        <result column="UPDATE_TIME" property="updateTime"/>
        <result column="UPDATE_USER" property="updateUser"/>
        <result column="VERSION" property="version"/>
        <result column="DELETE_FLG" property="deleteFlg"/>
    </resultMap>
    <insert id="insertVisa" parameterType="cn.stylefeng.guns.modular.employee.entity.Visa">
        insert into employee_visa (USER_ID,
        EMPLOYEE_ID,VISA_TYPE,VISA_UPDATE_TIME, VISA_EXPIRE_TIME,
        CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER)
        values
        (#{userId},#{employeeId},#{visaType},#{visaUpdateTime},#{visaExpireTime},
        CURRENT_TIMESTAMP,#{userId},CURRENT_TIMESTAMP,#{userId})
    </insert>
    <update id="updateVisa" parameterType="cn.stylefeng.guns.modular.employee.entity.Visa">
        update employee_visa
        set VISA_TYPE=#{visaType},VISA_UPDATE_TIME=#{visaUpdateTime},VISA_EXPIRE_TIME=#{visaExpireTime}
        where EMPLOYEE_ID=#{employeeId}

    </update>

    <select id="list" resultType="map">
        select
        a.EMPLOYEE_ID as employeeId,
        b.EMPLOYEE_NAME_CN as employeeNameCn,
        a.VISA_TYPE as visaType,
        a.VISA_UPDATE_TIME as visaUpdateTime,
        a.VISA_EXPIRE_TIME as visaExpireTime
        from employee_visa a
        left join employee b on a.USER_ID=b.USER_ID
        <if test="employeeNameCn != null and employeeNameCn != ''">
            where b.EMPLOYEE_NAME_CN like CONCAT('%',#{employeeNameCn},'%')
        </if>
        order by a.VISA_UPDATE_TIME DESC
    </select>


    <select id="getUnregister" resultMap="BaseResultMap">
        SELECT
          *,CONCAT(USER_ID,",",EMPLOYEE_ID) as 'EMPLOYEE_SELECT_VALUE'
        FROM
          employee
        WHERE EMPLOYEE_ID NOT IN(SELECT EMPLOYEE_ID FROM employee_visa)
    </select>

    <select id="selectVisaByEid" resultType="java.util.Map">
        select
        a.EMPLOYEE_ID as employeeId,
        b.EMPLOYEE_NAME_CN as employeeNameCn,
        a.VISA_TYPE as visaType,
        a.VISA_UPDATE_TIME as visaUpdateTime,
        a.VISA_EXPIRE_TIME as visaExpireTime
        from employee_visa a
        left join employee b on a.USER_ID=b.USER_ID
        where b.EMPLOYEE_ID like #{employeeId}
    </select>

    <!--insert id="insertVisa" parameterType="cn.stylefeng.guns.modular.employee.entity.visa">

        insert into employee_visa (
       EMPLOYEE_ID，VISA_TYPE, VISA_UPDATE_TIME, VISA_EXPIRE_TIME,
        CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER)
        values
        (#{employeeId},#{visaType},#{visaUpdateTime},#{visaExpireTime},
        CURRENT_TIMESTAMP,#{employeeId},CURRENT_TIMESTAMP,#{employeeId})
        ON DUPLICATE KEY UPDATE
         EMPLOYEE_ID = #{employeeId},
        VISA_TYPE = #{visaType},
        VISA_UPDATE_TIME= #{visaUpdateTime},
        VISA_EXPIRE_TIME = #{visaExpireTime},
        CREATE_TIME = CURRENT_TIMESTAMP,
        CREATE_USER = #{userId},
        UPDATE_TIME = CURRENT_TIMESTAMP,
        UPDATE_USER = #{userId}

    </insert-->
</mapper>
